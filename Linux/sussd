#!/usr/bin/env sh
#
# script to create a ussd(Unstructured supplementary Service Data)
# session through a 3GPP network

# global variables declaration
getidex=0

requir() {
	if ! command -v mmcli &>/dev/null; then
		echo 'mmcli not present, install ModemManager' >&2
		return 1
	elif test $# -ne 0; then
		echo 'arguments are not required, just run sussd' >&2
		return 1
	fi
	return 0
}

getmodem() {
	getidex="$(mmcli -L | cut -d/ -f6 | cut -d ' ' -f1)"
	if ! echo "$getidex" | grep -q '[0-9]\+'; then 
		echo "could not get modem index" >&2
		return 1
	fi
	return 0
}

# for multiline regex
smperl() {
	perl -e "my \$line = undef;
	while (<<>>) {
		\$line .= \$_;
	}
	\$_ = \$line;
	if (/^.*:\\s+'(.*)'\$/s) {
		print \$1, \"\\n\";
	}"
}

prompt() {
	# don't try to end a ussd session that
	# that doesn't exist in the first place
	checkst() {
		status="$(mmcli -m $getidex --3gpp-ussd-status | \
			 fgrep status: | awk -F[':'] '{print $2}')"
		status="${status## }"
		test "$status" = idle && return 1 || return 0
	}
	# end the opened session before exiting the program
	rumfirst() {
		mmcli -m $getidex --3gpp-ussd-cancel
	}
	trap 'checkst && rumfirst' SIGINT SIGQUIT

	local query=''
	while read -p '> ' query; do
		if test -z "$query"; then
			continue
		elif echo $query | grep -q '^\*[\*0-9]*#$'; then
			checkst && mmcli -m $getidex --3gpp-ussd-cancel &>/dev/null
			mmcli -m $getidex --3gpp-ussd-initiate="$query" | smperl
			continue
		fi
		case "$query" in
		e|q|exit|quit)
			checkst && mmcli -m $getidex --3gpp-ussd-cancel
			break ;;
		[0-9]|[0-9][0-9]|[0-9][0-9][0-9]|\#|\*)
			mmcli -m $getidex --3gpp-ussd-respond="$query" | smperl ;;
		*)
			echo 'invalid query' >&2 ;;
		esac
	done
	echo
}

requir && getmodem && prompt
