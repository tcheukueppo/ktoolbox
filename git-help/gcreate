#!/bin/sh

program="${0##*/}"

# default visibility of the project
access=false

main() {
	command -v tok >/dev/null || die "$program: tok not found"

	if (test $# -ge 4 && test $# -le 5)
	then
		while getopts :pn:d: opt
		do
			case "$opt" in
				p)  access=true      ;;
				n)  name=$OPTARG     ;;
				d)  descript=$OPTARG ;;
				\?) die "unknown '$(eval \$$((OPTIND - 1)))'" ;;
			esac
		done

		shift `expr $OPTIND - 1`
		test $# -ne 0 && die "$program: invalid option count"

		create_repository
	else usage; fi
}

usage() { printf "gcreate [-p] -d description -n repo_name\n"; }
die  () { printf "%s\n" "$*"; exit 1; }

create_repository() {

	if [ `expr "$name" : '\([^ ]*\)'` = "$name" ]
	then
		## create github repository
		(
			curl                                               \
				--request POST                                 \
				--header "Authorization: token $(tok github)"  \
				--data '
					{ 
					  "name": "'$name'",
					  "private": '$access'
					}
				'                                              \
				--url 'https://api.github.com/user/repos'
		) >/dev/null 2>&1

		## create gitlab repository
		(
			curl                                          \
				--request POST                            \
				--header "PRIVATE-TOKEN: $(tok gitlab)"   \
				--header "Content-Type: application/json" \
				--data '
					{
					  "name": "'$name'",
					  "initialize_with_readme": "false"
					}
				'                                         \
				--url 'https://gitlab.com/api/v4/projects/'
		) >/dev/null 2>&1

		## create codeberg repository
		(
			curl                                                \
				--request POST                                  \
				--header "Authorization: token $(tok codeberg)" \
				--header "Content-Type: application/json"       \
				--header "accept: application/json"             \
				--data '
					{
					  "default_branch": "master",
					  "description": "'"$descript"'",
					  "license": "GPL3",
					  "name": "'$name'",
					  "private": '$access',
					  "template": true,
					  "trust_model": "default"
					}
				'                                               \
				--url 'https://codeberg.org/api/v1/user/repos'  \
		) >/dev/null 2>&1
	else die "$program: '$name' is an invalid repository name"; fi
}

main "$@"
