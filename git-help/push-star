#!/bin/sh

## useful lines for cronjobs
## personal: 

## usage examples
## push-star -o -r "github.com gitlab.com codeberg.org" "tcheukueppo:project_name"
## push-star -p -r "github.com gitlab.com codeberg.org" "lisa:project_name"
main() {

	##<<<<< cron should add new repositories here
	personal_repo="tcheukueppo:
		kst kdwm ksent kslock kfetch kslstatus
		myresources amonia orangebar herbe
		learn gists ktoolbox svis snvim conky.store
		wfmux farbfeld-utils apriori kdmenu kuttix
		krit weeklychallenge sia sad raku-matrix
		perl-matrix sysutils farbfeld-4
	"
	##<<<<< cron should add new repositories here too
	organisation_repo="
		lisa: lisad lisa
		paranoid: paranoid
	"

	remote_repo="github.com gitlab.com codeberg.org"

	personal=TRUE

	while getopts :r:u:op option; do
		case "$option" in
			r) remote_repo="$OPTARG" ;;
			p) personal=TRUE         ;;
			o) personal=FALSE        ;;
		esac
	done

	[ $OPTIND -eq $# ] || die "you are for sure not the owner of this script!"

	shift $((OPTIND - 1))

	if [ "$personal" = TRUE ]; then
		personal_repo="$1"
		push_to_personal_repository
	else
		organisation_repo="$1"
		push_to_organizational_repository
	fi
}

warn()  { printf '%s\n' "$*" >&2; return 1; }
die ()  { warn "$*"; exit 1; }

push_to_personal_repository() {

	username="$(printf '%s' "$personal_repo" | sed -n '1p' | tr -d ':' | tr -d ' ')"
	personal_list="$(printf '%s' "$personal_repo" | awk 'NR > 1{print $0}')"

	for i in $personal_list; do
		repository="$(readlink -f "$project_dir/$i")"

		## attempt to create repo even if it exists, which kinda slow things up but...
		gcreate -p -n "$i" -d "$i" >/dev/null 2>&1

		[ -x "$repository" ]      || continue
		[ -d "$repository/.git" ] || continue

		cd "$repository"
		if git status | tail -n1 | grep -qE 'nothing to commit'
		then
			printf 'on %s...\n' "$i"
			for j in $remote_repo
			do
				olink="https://$j/$username/$i"
				link=`printf '%s' "$olink" | sed -e "s#\(^https://\)#\1$([ "$j" = 'gitlab.com' ] && printf 'create:')$(tok ${j%%.*})@#"`
				printf 'push %s to %s\n' "$i" "$link"
				git push "$link" || warn "failed to push $i to '$olink'"
			done
		else
			warn "ignoring '$i'"
		fi
	done
}

push_to_organizational_repository() {

	printf '%s' "$organisation_repo" | while read org_repo
	do
		expr "$org_repo" : '[ \t]*' >/dev/null >&2 && continue
		org_name="$(printf '%s' "$org_repo" | awk )"
		org_list="$(printf '%s' "$org_repo" | awk )"
		for i in $org_list; do
			for j in $remote_repo
			do
				olink="https://$j/$username/$i"
				link=`printf '%s' "$olink" | sed -e "s#\(^https://\)#\1$([ "$j" = 'gitlab.com' ] && printf 'create:')$(tok ${j%%.*})@#"`
				printf 'push %s to %s\n' "$i" "$link"
				git push "$link" || warn "failed to push $i to '$olink'"
			done
		done
	done
}

project_dir="$HOME/projects"
program="${0%%*/}"

for i in git tok gcreate; do command -v "$i" >/dev/null || die "$program: $i not found"; done

main "$@" > "$HOME/.push-star.log"
