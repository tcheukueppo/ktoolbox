#!/usr/bin/env sh
#
# sadp is use to control sad(simple audio daemon).
# this script is part of
#    <https://codeberg.org/tcheukueppo/scripts.git>
#
#                                  Author: kueppo

# config
paths='/mnt2/media/musics/:'
sock='/tmp/sad-sock'
cache="${XDG_HOME_CACHE:-"$HOME/.cache"}"
sadcache="$cache/sadp"

if ! test -S $sock; then
	echo "no unix domain socket at: ${sock}" >&2
	exit 1
fi

# checking for cache
ucache() {
	local lnr
	local slnr

	if test -f "$sadcache"; then
		# file format check
		lnr="$(cat $sadcache | wc -l)"
		slnr="$(cat $sadcache | grep '^add .*\(mp3\|flac\|wav\|ogg\)$' | wc -l)"
		if test $lnr != $slnr; then
			echo "invalid file format at $cache" >&2
			return 1
		fi
		# check if already added
		lnr="$(nc -q 0 -U $sock <<< "playlist" | \
			grep -v '^OK' | grep -v '^ERR' | wc -l)"
		if test $lnr -eq 0; then
			cat "$sadcache" | nc -q 0 -U $sock &>/dev/null
		fi
		return 0
	fi
	return 1
}

addapl() {
	local p dir
	IFS=$':'

	nc -q 0 -U $sock <<< "clear"
	while read -r -d: p; do
		dir=`readlink -f $p`
		test -d "$dir" || continue
		find $dir -type f \
			\( \
				-iname "*.mp3" -or \
				-iname "*.ogg" -or \
				-iname "*.flac" -or \
				-iname "*.wav"  \
			\) \
			-exec printf "add %s\n" '{}' \; | \
		tee $sadcache | nc -q 0 -U $sock
	done < <(echo "$paths")
}

control() {
	local args=1

	while getopts :cknpsfld:a:r action; do
		case $action in
		a|A)
		     args=`expr $args + 1`
		     eval paths="\$$args"
		     addapl ;;
		c|C) nc -q 0 -U $sock <<< "clear" ;;
		k|K) nc -q 0 -U $sock <<< "kill" ;;
		n|N) nc -q 0 -U $sock <<< "next" ;;
		p|P) nc -q 0 -U $sock <<< "prev" ;;
		s|S) nc -q 0 -U $sock <<< "stop" ;;
		d|D)
		     args=`expr $args + 1`
		     eval args="\$$args"
			 nc -q 0 -U $sock <<< "remove $args" ;;
		f|F) nc -q 0 -U $sock <<< "pause" ;;
		r|R) nc -q 0 -U $sock <<< "random" ;;
		l|L) nc -q 0 -U $sock <<< "playlist" ;;
		
		*)
		     echo "invalid option" >&2
		     return 1 ;;
		esac
		args=`expr $args + 1`
	done
}

## main
case $# in
0)
	ucache || { addapl &>/dev/null; } ;;
1|2)
	control "$@" ;;
*) 
	echo "invalid number of arguments" >&2
	exit 1 ;;
esac
